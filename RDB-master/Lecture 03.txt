Lecture 03　向量(vector)與階層(factor)
--------------------------------------------------------------------------------
3.1　向量之產生

> numeric(5)　#預設為 0
> character(5)　#預設為空字串
> logical(5)　#非 boolean，預設同樣為 0(FALSE)

> seq1=1:16
> seq2=seq(1, 16)　#seq1, seq2 結果相同，等同 by=1(預設)
> seq3=seq(1, 16, by=5)
> seq3
[1]  1  6 11 16
> seq4=seq(1, 16, length=5)　#包含頭尾，切分為五等分 
> seq4
[1]  1.00  4.75  8.50 12.25 16.00

--------------------------------------------------------------------------------
> rep1=rep(1, 5)
> rep2=rep(c(1, 2), 5)　#將 c(1, 2) 向量重複五次
> rep3=rep(c(1, 2),each=5)　#將 c(1, 2) 向量之元素個別重複五次
> rep3
[1] 1 1 1 1 1 2 2 2 2 2
> rep4=rep(c(1, 2),length=5)　# 將 c(1, 2) 向量重複至總長為五
> rep4
[1] 1 2 1 2 1

--------------------------------------------------------------------------------
3.2　基本向量運算

> A=c(10, 15, 20)
> B=c(10, 3, 5)　#相等長度: 可直接進行運算
> C=c(10, 5)　#相異長度: 會自動將向量重複至總長相等: 以 c(10, 5, 10) 運算
> A+C
[1] 20 20 30 (出現 warning 訊息)

> D=c(A, B, C)　#事實上即為 c(c(10, 15, 20), c(10, 3, 5), c(10, 5))
> D
[1] 10 15 20 10 3 5 10 5
> length(D)
> sum(D)　#計算向量內各元素之加總

--------------------------------------------------------------------------------
[範例] 中央圖書館彙整本月違規次數如下：學士班 120 次、碩士班 200 次、博士班 40 次

1. 試求碩士生在圖書館違規之相對次數？
> violate=c(120, 200, 40)
> per=violate/sum(violate)　#計算元素加總，再讓向量元素逐個與之相除
> per
[1] 0.333 0.556 0.111

2. 圖書館另統計教職員亦有 60 次違規，請重新計算上題結果。
> violate2=c(violate, 60)　#不見得更動都可直接覆蓋，宜取新名
> per=violate2/sum(violate2)
> per
[1] 0.286 0.476 0.095 0.143

--------------------------------------------------------------------------------
3.3　條件與篩選

> height=c(171, 178, 167, 177, 170)
> names(height)=c("01", "02", "03", "04", "05")　#既可用位置(index)描述也可自行命名
> height
 01  02  03  04  05 
171 178 167 177 170

> class(height)　#是向量沒錯，但會告訴你由哪種型態之資料組成
[1] "numeric"
> str(height)
 Named num [1:5] 171 178 167 177 170
- attr(*, "names")= chr [1:5] "01" "02" "03" "04" "05"
> summary(height)
 Min.  1st Qu.  Median   Mean  3rd Qu.   Max. 
167.0   170.0   171.0   172.6   177.0   178.0 

--------------------------------------------------------------------------------
> height>175 | height==170　#或: 不可用 or，需以 == 表比對，否則會變成賦值指向
   01    02    03    04    05 
FALSE  TRUE FALSE  TRUE  TRUE 
> height<175 & height>170　#且: 不可用 and
   01    02    03    04    05 
 TRUE FALSE FALSE FALSE  TRUE

> height[1]
> height[c(1, 2)]　#不可寫 (1, 2): 向量為一維，只可接受單一參數
> height[c("02", "03")]　#以位置(index)或名稱篩選
> height[height<175]　#條件篩選，只印出 boolean=1(TRUE)
  02  04 
 178 177 

--------------------------------------------------------------------------------
[範例] 以下是數位同學之身高體重: Brian 180/73、Toby 169/87、Sherry 173/43

1. 正常範圍之身體質量指數為 18.5~24，請找出符合者:
> height=c(180, 169, 173)
> weight=c(73, 87, 43)
> names(height)=c("Brian", "Toby", "Sherry")
> height[weight/(height/100)^2 >18.5 & weight/(height/100)^2 <24]　#條件只能放入一個參數，不要寫成兩個條件取 and/or(並無聯、交集關係)
Brian 
  180 

2. 護理師想知道非正常範圍同學之 BMI 指數，請協助之:
> BMI=weight/(height/100)^2
> names(BMI)=c("Brian", "Toby", "Sherry")
> BMI[BMI>24 | BMI<18.5]
  Toby  Sherry 
30.461 14.367

--------------------------------------------------------------------------------
3.4　階層與順序

> weather=c("rainy", "cloudy", "cloudy", "sunny", "rainy")
> wtype=factor(weather)　#以 factor 取出(不重複)階層類別
[1] rainy  cloudy cloudy sunny  rainy 
Levels: cloudy rainy sunny　
> length(wtype)　#仍會逐筆計算，故等同 length(weather)=5
> levels(wtype)
[1] "cloudy" "rainy"  "sunny" 
> length(levels(wtype))　#就會只計算階層類別數
[1] 3

--------------------------------------------------------------------------------
> size=c("XL", "M", "L", "S", "M")
> stype1=factor(size, order=T)　#有序階層: 但未定義，故以字母排序
> stype2=factor(size, order=T, levels=c("S", "M", "L", "XL"))
> stype2
[1] XL M  L  S  M 
Levels: S < M < L < XL
> stype2[1] > stype2[2]　#stype2 包含資料及階層，可以原資料位置判斷大小　
[1] TRUE
> levels(stype2)
[1] "S"  "M"  "L"  "XL"
> length(levels(stype2))
[1] 4
